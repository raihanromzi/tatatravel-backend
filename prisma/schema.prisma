generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  roleId    Int
  firstName String   @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  username  String   @unique @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role Roles  @relation(fields: [roleId], references: [id])
  blog Blog[]

  @@index([username])
  @@map("users")
}

model Roles {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User[]

  @@map("roles")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      Blog[]

  @@map("categories")
}

model Blog {
  id          Int      @id @default(autoincrement())
  userId      Int
  categoryId  Int
  title       String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(100)
  description String?  @db.VarChar(255)
  content     String   @db.Text
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@index([slug])
  @@map("blogs")
}

model Area {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  countries Country[]

  @@map("areas")
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  areaId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  area           Area            @relation(fields: [areaId], references: [id])
  cities         City[]
  countries_tour CountriesTour[]

  @@map("countries")
}

model City {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  countryId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  country        Country         @relation(fields: [countryId], references: [id])
  indonesia_tour IndonesiaTour[]

  @@map("cities")
}

model IndonesiaTour {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  cityId      Int
  price       String   @db.VarChar(255)
  dateStart   DateTime
  dateEnd     DateTime
  description String?  @db.VarChar(255)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  city City @relation(fields: [cityId], references: [id])

  @@index([name])
  @@map("indonesia_tour")
}

model CountriesTour {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  countryId   Int
  price       String   @db.VarChar(255)
  dateStart   DateTime
  dateEnd     DateTime
  description String?  @db.VarChar(255)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  country Country @relation(fields: [countryId], references: [id])

  @@map("countries_tour")
}
